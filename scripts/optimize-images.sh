#!/bin/bash

# Image optimization script for Project Cam launch site
set -e

echo "🖼️ Optimizing images for Project Cam launch site..."

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Check if imagemin is available
if ! command -v npx &> /dev/null; then
    echo -e "${RED}❌ npx not found. Please install Node.js${NC}"
    exit 1
fi

# Create optimized directory
mkdir -p public/images/optimized

echo -e "${BLUE}📦 Installing image optimization tools...${NC}"
npm install --save-dev imagemin imagemin-webp imagemin-pngquant imagemin-mozjpeg

# Create optimization script
cat > scripts/imagemin.js << 'EOF'
const imagemin = require('imagemin');
const imageminWebp = require('imagemin-webp');
const imageminPngquant = require('imagemin-pngquant');
const imageminMozjpeg = require('imagemin-mozjpeg');

(async () => {
    // Process PNG and JPG files
    const files = await imagemin(['public/images/*.{jpg,jpeg,png}'], {
        destination: 'public/images/optimized',
        plugins: [
            imageminMozjpeg({quality: 85}),
            imageminPngquant({
                quality: [0.65, 0.8]
            })
        ]
    });

    console.log('📸 Optimized images:', files.map(f => f.destinationPath));

    // Generate WebP versions
    const webpFiles = await imagemin(['public/images/*.{jpg,jpeg,png}'], {
        destination: 'public/images/optimized',
        plugins: [
            imageminWebp({quality: 85})
        ]
    });

    console.log('🌐 Generated WebP images:', webpFiles.map(f => f.destinationPath));
})();
EOF

# Run optimization
echo -e "${BLUE}🔧 Running image optimization...${NC}"
node scripts/imagemin.js

# Generate placeholder images if none exist
echo -e "${BLUE}🎨 Generating placeholder images...${NC}"

# Create mock phone screenshots using SVG
mkdir -p public/images/phones

# Phone mockup 1 - Capture screen
cat > public/images/phones/capture-1.svg << 'EOF'
<svg width="300" height="600" viewBox="0 0 300 600" xmlns="http://www.w3.org/2000/svg">
  <rect width="300" height="600" rx="30" fill="#f3f4f6"/>
  <rect x="20" y="80" width="260" height="40" rx="20" fill="#ff6b35"/>
  <text x="150" y="105" text-anchor="middle" fill="white" font-family="Arial" font-size="16" font-weight="bold">Project Cam</text>
  
  <!-- Camera viewfinder -->
  <rect x="40" y="140" width="220" height="160" rx="10" fill="#1f2937"/>
  <circle cx="150" cy="220" r="60" fill="none" stroke="#ff6b35" stroke-width="3"/>
  <circle cx="150" cy="220" r="8" fill="#ff6b35"/>
  
  <!-- Voice recording -->
  <rect x="40" y="320" width="220" height="80" rx="10" fill="white" stroke="#e5e7eb"/>
  <circle cx="80" cy="360" r="20" fill="#ef4444"/>
  <text x="120" y="355" fill="#374151" font-family="Arial" font-size="14">Recording...</text>
  <text x="120" y="375" fill="#6b7280" font-family="Arial" font-size="12">0:23</text>
  
  <!-- Bottom buttons -->
  <circle cx="100" cy="500" r="30" fill="#6b7280"/>
  <circle cx="150" cy="500" r="35" fill="#ff6b35"/>
  <circle cx="200" cy="500" r="30" fill="#6b7280"/>
</svg>
EOF

# Phone mockup 2 - Reports screen
cat > public/images/phones/reports-1.svg << 'EOF'
<svg width="300" height="600" viewBox="0 0 300 600" xmlns="http://www.w3.org/2000/svg">
  <rect width="300" height="600" rx="30" fill="#f9fafb"/>
  <rect x="20" y="80" width="260" height="40" rx="20" fill="#1f2937"/>
  <text x="150" y="105" text-anchor="middle" fill="white" font-family="Arial" font-size="16" font-weight="bold">AI Reports</text>
  
  <!-- Report header -->
  <rect x="40" y="140" width="220" height="60" rx="10" fill="white" stroke="#e5e7eb"/>
  <text x="60" y="165" fill="#1f2937" font-family="Arial" font-size="16" font-weight="bold">Project Summary</text>
  <text x="60" y="185" fill="#6b7280" font-family="Arial" font-size="12">Generated by AI • 2 min ago</text>
  
  <!-- Chart placeholder -->
  <rect x="40" y="220" width="220" height="120" rx="10" fill="white" stroke="#e5e7eb"/>
  <text x="150" y="285" text-anchor="middle" fill="#6b7280" font-family="Arial" font-size="14">📊 Progress Chart</text>
  
  <!-- Report items -->
  <rect x="40" y="360" width="220" height="40" rx="8" fill="#fef3e2"/>
  <text x="60" y="385" fill="#f59e0b" font-family="Arial" font-size="14">✅ 15 tasks completed</text>
  
  <rect x="40" y="410" width="220" height="40" rx="8" fill="#ecfdf5"/>
  <text x="60" y="435" fill="#10b981" font-family="Arial" font-size="14">📸 32 photos captured</text>
  
  <rect x="40" y="460" width="220" height="40" rx="8" fill="#eff6ff"/>
  <text x="60" y="485" fill="#3b82f6" font-family="Arial" font-size="14">🎙️ 8 voice notes recorded</text>
</svg>
EOF

# Convert SVG to PNG for better compatibility
echo -e "${BLUE}🔄 Converting SVG placeholders to PNG...${NC}"
if command -v convert &> /dev/null; then
    convert public/images/phones/capture-1.svg public/images/phones/capture-1.png
    convert public/images/phones/reports-1.svg public/images/phones/reports-1.png
    echo -e "${GREEN}✅ SVG images converted to PNG${NC}"
else
    echo -e "${YELLOW}⚠️  ImageMagick not found. SVG files will be used as-is${NC}"
fi

# Generate favicon variations
echo -e "${BLUE}🔖 Generating favicon variations...${NC}"
mkdir -p public/favicons

# Create multiple favicon sizes if imagemagick is available
if command -v convert &> /dev/null; then
    convert public/favicon.svg -resize 16x16 public/favicons/favicon-16x16.png
    convert public/favicon.svg -resize 32x32 public/favicons/favicon-32x32.png
    convert public/favicon.svg -resize 180x180 public/favicons/apple-touch-icon.png
    convert public/favicon.svg -resize 512x512 public/favicons/android-chrome-512x512.png
    echo -e "${GREEN}✅ Favicon variations generated${NC}"
fi

# Clean up
rm -f scripts/imagemin.js

echo ""
echo -e "${GREEN}🎉 Image optimization completed!${NC}"
echo -e "${BLUE}📋 Generated assets:${NC}"
echo "  🖼️  Optimized images in public/images/optimized/"
echo "  📱 Phone mockups in public/images/phones/"
echo "  🔖 Favicon variations in public/favicons/"
echo ""
echo -e "${YELLOW}💡 Next steps:${NC}"
echo "  1. Replace placeholder images with real screenshots"
echo "  2. Add WebP support in your image components"
echo "  3. Update HTML meta tags to reference new favicons"